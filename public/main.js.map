{"version":3,"sources":["./src/services/util.service.ts","./src/services/contact-resolver.service.ts","./src/app/pages/Contact/contact.component.html","./src/app/pages/Contact/Contact.component.ts","./src/services/bitcoin.service.ts","./src/app/cmps/Contact-list/contact-list.component.html","./src/app/cmps/Contact-list/Contact-list.component.ts","./src/environments/environment.ts","./src/app/cmps/header/header.component.ts","./src/app/cmps/header/header.component.html","./src/app/cmps/Contact-preview/contact-preview.component.html","./src/app/cmps/Contact-preview/Contact-preview.component.ts","./src/app/pages/Contact-edit/contact-edit.component.html","./src/app/pages/Contact-edit/Contact-edit.component.ts","./src/services/user.service.ts","./src/services/http.service.js","./src/app/cmps/move-list/move-list.component.html","./src/app/cmps/move-list/move-list.component.ts","./src/app/cmps/fund/fund.component.ts","./src/app/cmps/fund/fund.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/guards/auth.guard.ts","./src/services/storageService.ts","./src/app/app.module.ts","./src/app/cmps/Contact-filter/Contact-filter.component.ts","./src/app/cmps/Contact-filter/contact-filter.component.html","./src/services/contact.service.ts","./src/models/contact.model.ts","./src/app/pages/homepage/homepage.component.html","./src/app/pages/homepage/homepage.component.ts","./src/app/cmps/chart/chart.component.ts","./src/app/cmps/chart/chart.component.html","./src/app/pages/Contact-details/Contact-details.component.ts","./src/app/pages/Contact-details/contact-details.component.html","./src/app/pages/statistics/statistics.component.ts","./src/app/pages/statistics/statistics.component.html","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["\r\nexport const utilService = {\r\n    delay,\r\n    getRandomInt,\r\n    makeId\r\n}\r\n\r\nfunction delay(ms = 1500) {\r\n    return new Promise(resolve => {\r\n        setTimeout(resolve, ms)\r\n    })\r\n}\r\n\r\nfunction getRandomInt(min, max) {\r\n    min = Math.ceil(min);\r\n    max = Math.floor(max);\r\n    return Math.floor(Math.random() * (max - min) + min); //The maximum is exclusive and the minimum is inclusive\r\n}\r\n\r\nfunction makeId(length = 5) {\r\n    var txt = '';\r\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    for (var i = 0; i < length; i++) {\r\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\r\n    }\r\n    return txt;\r\n}","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, ActivatedRouteSnapshot, Resolve } from '@angular/router';\nimport { ContactService } from './contact.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ContactResolverService implements Resolve<any>{\n\n  constructor(private contactService: ContactService) { }\n  \n  async resolve(route: ActivatedRouteSnapshot){\n    const {id} = route.params\n    console.log('id resolver:', id)\n    const contact = await this.contactService.getContactById(id)\n    return contact\n\n  }\n}\n","<section class=\"contact\">\n  <div *ngIf=\"!selectedContactId; else contactDetails\">\n    <h2>My contacts</h2>\n    <div class=\"flex space-between contact-ctrls\">\n      <a routerLink=\"edit\" class=\"btn add add-contact\"></a>\n      <contact-filter (onSetFilter)=\"onSetFilter($event)\"></contact-filter>\n    </div>\n    <contact-list\n      [contacts]=\"contacts$ | async\"\n      (onSelectContact)=\"selectedContactId = $event\"\n    ></contact-list>\n  </div>\n  <ng-template #contactDetails>\n    <div *ngIf=\"!isEdit; else contactEdit\">\n      <contact-details\n        [contactId]=\"selectedContactId\"\n        (onEdit)=\"isEdit = true\"\n      ></contact-details>\n    </div>\n    <ng-template #contactEdit>\n      <contact-edit\n        [contactId]=\"selectedContactId\"\n      >\n      </contact-edit>\n    </ng-template>\n  </ng-template>\n</section>\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Contact } from '../../../models/contact.model'\nimport { ContactService } from 'src/services/contact.service'\n@Component({\n  selector: 'contact',\n  templateUrl: './contact.component.html',\n  styleUrls: ['./contact.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContactComponent implements OnInit {\n  contacts$: Observable<Contact[]>\n  selectedContactId: String\n  filterBy\n  constructor(private contactService: ContactService) {\n    \n   }\n\n  loadContacts() {\n    this.contactService.loadContacts(this.filterBy)\n    this.contacts$ = this.contactService.contacts$\n  }\n\n  onSetFilter(filterBy) {\n    this.filterBy = filterBy\n    this.loadContacts()\n  }\n\n  ngOnInit(): void {\n    this.loadContacts()\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { storageService } from './storageService'\r\nimport { of } from \"rxjs\";\r\nimport {MarketPriceValue} from '../models/Market-price.model'\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\n\r\nexport class BitcoinService {\r\n    constructor(private http: HttpClient) { }\r\n    MARKET_PRICE_KEY = 'marketPrice'\r\n    CONFIRMED_TRANSACTIONS_KEY = 'confirmedTransactions'\r\n\r\n    getRate(coins: number) {\r\n        return this.http.get<number>('https://blockchain.info/tobtc?currency=USD&value=1')\r\n            .pipe(\r\n                map(res => {\r\n                    const rate = coins / res;\r\n                    return rate.toLocaleString('he-IL')\r\n                })\r\n            )\r\n    }\r\n\r\n    getMarketPrice() {\r\n        const marketPrice = storageService.load(this.MARKET_PRICE_KEY)\r\n        if (marketPrice && marketPrice?.length) return of(marketPrice)\r\n        // return this.http.get<Array<MarketPriceValue>('https://api.blockchain.info/charts/market-price?timespan=5months&format=json&cors=true')\r\n        return this.http.get<any>('https://api.blockchain.info/charts/market-price?timespan=5months&format=json&cors=true')\r\n            .pipe(\r\n                map(res => res.values.map(\r\n                    ({ x, y }) => {\r\n                        return [(new Date(x * 1000).toLocaleDateString(['ban', 'id'])), y]\r\n                    }\r\n                )),\r\n                tap(values => storageService.store(this.MARKET_PRICE_KEY, values))\r\n            )\r\n    }\r\n\r\n    getConfirmedTransactions(){\r\n        const confirmedTransactions = storageService.load(this.CONFIRMED_TRANSACTIONS_KEY)\r\n        if (confirmedTransactions && confirmedTransactions?.length) return of(confirmedTransactions)\r\n        return this.http.get<any>('https://api.blockchain.info/charts/transactions-per-second?timespan=5weeks&rollingAverage=8hours&format=json&cors=true')\r\n            .pipe(\r\n                map(res => res.values.map(\r\n                    ({ x, y }) => {\r\n                        return [(new Date(x * 1000).toLocaleDateString(['ban', 'id'])), y]\r\n                    }\r\n                )),\r\n                tap(values => storageService.store(this.CONFIRMED_TRANSACTIONS_KEY, values))\r\n            )\r\n    }\r\n}","<section class=\"contact-list\">\n    <contact-preview \n    *ngFor=\"let contact of contacts\" \n    trackBy=\"trackByFn\" \n    [contact]=\"contact\"\n    (click)=\"onSelectContact(contact._id)\"></contact-preview>\n</section>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output, } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Contact } from 'src/models/contact.model';\n\n@Component({\n  selector: 'contact-list',\n  templateUrl: './contact-list.component.html',\n  styleUrls: ['./contact-list.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContactListComponent implements OnInit {\n  @Input() contacts: Contact[]\n\n  constructor(private router: Router) {\n    // this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n   }\n\n  onSelectContact(contactId) {\n    this.router.navigateByUrl('contact/' + contactId)\n\n  }\n\n  trackByFn(contact: Contact) {\n    return contact._id\n  }\n\n  ngOnInit(): void {\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, EventEmitter, OnInit, Output, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss'],\n  changeDetection:ChangeDetectionStrategy.OnPush\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"flex space-between header\">\n    <h2 class=\"logo\"><span>Mr</span>Bitcoin</h2>\n    <nav>\n        <a routerLink=\"\" routerLinkActive=\"active\" [routerLinkActiveOptions]=\"{exact:true}\" class=\"home\" title=\"Home\"></a>\n        <a routerLink=\"contact\" routerLinkActive=\"active\" class=\"contact\" title=\"Contacts\"></a>\n        <a routerLink=\"statistic\" routerLinkActive=\"active\" class=\"statistic\" title=\"Statistics\"></a>\n    </nav>\n</section>\n","<section class=\"flex column contact-preview\">\n  <div class=\"img-container\">\n    <img\n      class=\"contact-img\"\n      [src]=\"'https://i.pravatar.cc/150?u=' + contact._id\"\n      alt=\"{{ contact.name }}'s photo\"\n      (load)=\"hideLoader()\"\n      [ngStyle]=\"{visibility:!isLoaded?'hidden':''}\"\n    />\n      <img \n      *ngIf=\"!isLoaded\"\n      class=\"loader\"\n      src=\"https://i.pinimg.com/originals/19/cc/77/19cc777afcca19dda6f4a13ea889d6b6.gif\" alt=\"\">\n  </div>\n  <h2>{{ contact.name }}</h2>\n</section>\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { Contact } from 'src/models/contact.model';\n\n@Component({\n  selector: 'contact-preview',\n  templateUrl: './contact-preview.component.html',\n  styleUrls: ['./contact-preview.component.scss'],\n  changeDetection:ChangeDetectionStrategy.OnPush\n\n})\nexport class ContactPreviewComponent implements OnInit {\n  @Input() contact:Contact;\n  isLoaded:boolean\n  constructor() { \n    this.isLoaded=false;\n  }\n  hideLoader(){\n    console.log('loaded');\n    this.isLoaded = true\n  }\n  ngOnInit(): void {\n  }\n\n}\n","<section class=\"edit\" *ngIf=\"contact\">\n  <button (click)=\"onBack()\" class=\"btn back\"></button>\n  <form [formGroup]=\"form\" (submit)=\"onSaveContact()\" class=\"flex column edit-form \">\n    <Label for=\"name\">Name:</Label>\n    <input type=\"text\" id=\"name\" formControlName=\"name\" />\n    <Label for=\"phone\">Phone:</Label>\n    <input type=\"text\" id=\"phone\" formControlName=\"phone\"/>\n    <Label for=\"email\">E-mail:</Label>\n    <input type=\"text\" id=\"email\" formControlName=\"email\" />\n    <button class=\"btn confirm\">Save</button>\n  </form>\n</section>\n","import { Component, OnInit, Output, EventEmitter, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { Subscription } from 'rxjs';\nimport { Contact } from 'src/models/contact.model';\nimport { ContactService } from 'src/services/contact.service';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { mergeMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'contact-edit',\n  templateUrl: './contact-edit.component.html',\n  styleUrls: ['./contact-edit.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContactEditComponent implements OnInit {\n  @Input() contactId: string\n  contact: Contact\n  subscription: Subscription\n\n  form: FormGroup\n  constructor(private contactService: ContactService,\n    private route: ActivatedRoute,\n    private router: Router,\n    private fb: FormBuilder) {\n\n  }\n\n  async onSaveContact() {\n    // console.log('this.form.value:', this.form.value)\n    const updatedContact = { ...this.form.value }\n    if (this.contact._id) updatedContact._id = this.contact._id\n    await this.contactService.saveContact(updatedContact)\n    this.onBack()\n  }\n\n  onBack() {\n    if (this.contact._id) this.router.navigateByUrl('/contact/' + this.contact._id)\n    else this.router.navigateByUrl('/contact')\n  }\n\n  ngOnInit(): void {\n    this.route.data.subscribe(data => {\n      this.contact = data.contact\n    })\n\n    this.form = this.fb.group({\n      name: this.contact.name,\n      phone: this.contact.phone,\n      email: this.contact.email\n    })\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable, of } from 'rxjs';\r\nimport { Move } from 'src/models/move.model';\r\nimport { User } from 'src/models/user.model';\r\nimport { storageService } from './storageService'\r\nimport { utilService } from './util.service';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class UserService {\r\n    private _user$ = new BehaviorSubject({ name:'', coins:0, moves:[]});\r\n    public user$ = this._user$.asObservable();\r\n\r\n    LOGGEDIN_USER_KEY = \"loggedinUser\"\r\n\r\n    displayMoves:Move[] = [\r\n        { toId: '6071cb7da166544b0e0c9368', to: 'Ollie Christian', at: 1620162000000, amount:5 },\r\n        { toId: '6071cb7da166544b0e0c936f', to: 'Lilly Conner', at: 1620594000000, amount:1 },\r\n        { toId: '6071cb7da166544b0e0c936a', to: 'Glenna Santana', at: 1620853200000, amount:3 },\r\n    ]\r\n    public signup(userName) {\r\n        const newUser:User = {_id:utilService.makeId(), name:userName, coins:100, moves:this.displayMoves}\r\n        this._saveUser(newUser)\r\n        this._user$.next(newUser)\r\n    }\r\n\r\n    public logout() {\r\n        storageService.store(this.LOGGEDIN_USER_KEY, null)\r\n        this._user$.next({ name:'', coins:0, moves:[]})\r\n    }\r\n\r\n    public checkLoggedIn() {\r\n        const user = this._getUser()\r\n        return user && !!Object.keys(user).length\r\n    }\r\n\r\n    public getUserMoves() {\r\n        const user = storageService.load(this.LOGGEDIN_USER_KEY)\r\n        return user.moves\r\n    }\r\n\r\n    \r\n    public addMove(contact, amount) {\r\n        const user:User = this._getUser();\r\n\r\n        if (user.coins >= amount) {\r\n            user.coins -= amount\r\n            const move: Move = { toId: contact._id, to: contact.name, at: Date.now(), amount }\r\n            user.moves = [...user.moves, move]\r\n            storageService.store(this.LOGGEDIN_USER_KEY, user)\r\n            this._user$.next(user)\r\n        }\r\n    }\r\n\r\n   \r\n    private _getUser(){\r\n        const user= storageService.load(this.LOGGEDIN_USER_KEY)\r\n        return user\r\n\r\n    }\r\n\r\n    private _saveUser(user){\r\n        storageService.store(this.LOGGEDIN_USER_KEY, user)\r\n\r\n    }\r\n\r\n\r\n}","import Axios from 'axios'\r\n// import {router} from '@/router'\r\n\r\n// const BASE_URL = process.env.NODE_ENV === 'production'\r\n//     ? '/api/'\r\n//     : '//localhost:3030/api/'\r\nconst BASE_URL = '/api/'\r\n\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'GET', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        // if (err.response && err.response.status === 401) {\r\n            // Depends on routing startegy - hash or history\r\n            // window.location.assign('/#/login')\r\n            // window.location.assign('/login')\r\n            // router.push('/login')\r\n        // }\r\n        throw err\r\n    }\r\n}","<section [class]=\"moveClass\">\n  <h4>{{ title }}</h4>\n  <ul\n    *ngFor=\"let move of moves; index as idx\"\n    trackBy=\"trackByFn(idx)\"\n    class=\"clean-list\"\n  >\n    <li class=\"flex\">\n      <p *ngIf=\"isShowTo\"><span>To:</span> {{ move.to }}</p>\n      <p><span>Amount:</span> {{ move.amount }} BTC,</p>\n      <p><span>Date:</span> {{ move.at | date: \"d/M/yy\" }}</p>\n    </li>\n  </ul>\n</section>\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\nimport { Move } from 'src/models/move.model';\n\n@Component({\n  selector: 'move-list',\n  templateUrl: './move-list.component.html',\n  styleUrls: ['./move-list.component.scss'],\n  changeDetection:ChangeDetectionStrategy.OnPush\n})\nexport class MoveListComponent implements OnInit {\n  @Input() moves:Move[]\n  @Input() title:string\n  @Input() isShowTo:boolean\n  @Input() moveClass:string\n  constructor() { }\n\n  trackByFn(idx){\n    return idx\n  }\n\n  ngOnInit(): void {\n    \n  }\n\n}\n","import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output } from '@angular/core';\n\n@Component({\n  selector: 'fund',\n  templateUrl: './fund.component.html',\n  styleUrls: ['./fund.component.scss'],\n  changeDetection:ChangeDetectionStrategy.OnPush\n})\nexport class FundComponent implements OnInit {\n  amount: number\n  @Output() moveCoins= new EventEmitter<number>()\n\n  onMoveCoins(){\n    this.moveCoins.emit(this.amount);\n    this.amount=null\n  }\n  constructor() { }\n  ngOnInit(): void {\n  }\n\n}\n","<form (submit)=\"onMoveCoins()\" class=\"flex column fund\">\n  <label for=\"amount\">Amount:</label>\n  <input type=\"number\" min=\"0\" id=\"amount\" name=\"amount\" [(ngModel)]=\"amount\"/>\n  <button class=\"btn confirm\">Move</button>\n</form>\n","import { Component } from '@angular/core';\nimport { User } from 'src/models/user.model';\n\n@Component({\n  selector: 'app-root',\n  styleUrls: ['./app.component.scss', '../scss/main.scss'],\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  title = 'mrBitcoin';\n}\n","<section class=\"app\">\n  <header></header>\n  <router-outlet class=\"router-view\"></router-outlet>\n</section>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport {UserService } from '../../services/user.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private userService:UserService, private router:Router){}\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n      let isUserLoggedin = this.userService.checkLoggedIn()\n      if(!isUserLoggedin) this.router.navigateByUrl('')\n      return isUserLoggedin\n  }\n  \n}\n","\r\nfunction store(key, value) {\r\n    localStorage[key] = JSON.stringify(value);\r\n}\r\n\r\nfunction load(key, defaultValue = null) {\r\n    var value = localStorage[key] || defaultValue;\r\n    return JSON.parse(value);\r\n}\r\nexport const storageService = {\r\n    store,\r\n    load\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { GoogleChartsModule } from 'angular-google-charts';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { ContactDetailsComponent } from './pages/Contact-details/Contact-details.component';\nimport { ContactEditComponent } from './pages/Contact-edit/Contact-edit.component';\nimport { ContactComponent } from './pages/Contact/Contact.component';\nimport { ContactFilterComponent } from './cmps/Contact-filter/Contact-filter.component';\nimport { ContactListComponent } from './cmps/Contact-list/Contact-list.component';\nimport { ContactPreviewComponent } from './cmps/Contact-preview/Contact-preview.component';\n\nimport { HomepageComponent } from './pages/homepage/homepage.component';\nimport { HeaderComponent } from './cmps/header/header.component';\nimport { StatisticsComponent } from './pages/statistics/statistics.component';\nimport { ChartComponent } from './cmps/chart/chart.component';\nimport { MoveListComponent } from './cmps/move-list/move-list.component';\nimport { FundComponent } from './cmps/fund/fund.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ContactDetailsComponent,\n    ContactEditComponent,\n    ContactComponent,\n    ContactFilterComponent,\n    ContactListComponent,\n    ContactPreviewComponent,\n    \n    HomepageComponent,\n    HeaderComponent,\n    StatisticsComponent,\n    ChartComponent,\n    MoveListComponent,\n    FundComponent,\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    GoogleChartsModule,\n    FormsModule,\n    ReactiveFormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { ContactService } from 'src/services/contact.service';\n\n@Component({\n  selector: 'contact-filter',\n  templateUrl: './contact-filter.component.html',\n  styleUrls: ['./contact-filter.component.scss'],\n  changeDetection:ChangeDetectionStrategy.OnPush\n})\nexport class ContactFilterComponent implements OnInit {\n  @Output() onSetFilter= new EventEmitter<{term:string}>()\n  filterBy={term:''}\n\n  ngOnInit(): void {\n  }\n\n}\n","<form class=\"filter\">\n    <input type=\"text\"  name=\"term\" [(ngModel)]=\"filterBy.term\" (ngModelChange)=\"onSetFilter.emit(filterBy)\" placeholder=\"Search...\">\n</form>","import { Injectable } from '@angular/core';\r\nimport { Observable, BehaviorSubject, of } from 'rxjs';\r\nimport { Contact } from '../models/contact.model';\r\nimport { throwError } from 'rxjs';\r\nimport { httpService } from './http.service'\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { filter, map } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ContactService {\r\n\r\n\r\n  private _contacts$ = new BehaviorSubject<Contact[]>([])\r\n  public contacts$ = this._contacts$.asObservable()\r\n\r\n  private _contact$ = new BehaviorSubject<Contact>(new Contact)\r\n  public contact$ = this._contacts$.asObservable()\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  public getEmptyContact() {\r\n    return of({ name: '', phone: '', email: '' })\r\n  }\r\n\r\n  public async loadContacts(filterBy = { term: '' }) {\r\n    // console.log('got filterBy',filterBy);\r\n    // let params = new HttpParams().set('term', filterBy.term)\r\n    // return this.http.get<any>('http://localhost:3030/api/contact/?term='+filterBy.term)\r\n    // .subscribe(contacts => this._contacts$.next(this._sort(contacts)))\r\n    try {\r\n\r\n      var queryStr = !filterBy ? '' : `?term=${filterBy.term}`;\r\n      const contacts = await httpService.get(`contact${queryStr}`);\r\n      this._contacts$.next(this._sort(contacts))\r\n    } catch (err) {\r\n      console.log(err);\r\n\r\n    }\r\n  }\r\n\r\n\r\n  public getNeighborContactId(contactId, diff) {\r\n    // This option messes with  going back to the list\r\n    return this.contacts$.pipe(\r\n      map(contacts => {\r\n        let contactIdx = contacts.findIndex(({ _id }) => _id === contactId)\r\n        contactIdx += diff\r\n        if (contactIdx < 0) contactIdx = contacts.length - 1;\r\n        else if (contactIdx >= contacts.length) contactIdx = 0;\r\n\r\n        return contacts[contactIdx]._id\r\n\r\n\r\n      }))\r\n\r\n    // let neighborContactId;\r\n    // this.contacts$.subscribe(contacts => {\r\n    //   let contactIdx = contacts.findIndex(({ _id }) => _id === contactId)\r\n    //   contactIdx += diff;\r\n    //   if (contactIdx < 0) contactIdx = contacts.length - 1;\r\n    //   else if (contactIdx >= contacts.length) contactIdx = 0;\r\n\r\n    //   neighborContactId = (contacts[contactIdx]._id)\r\n    // })\r\n    // return neighborContactId\r\n\r\n\r\n  }\r\n\r\n  public async getContactById(id: string) {\r\n    console.log('id:', id)\r\n    if (!id) return this.getEmptyContact()\r\n    const contact = await httpService.get(`contact/${id}`);\r\n    return contact\r\n\r\n\r\n  }\r\n\r\n  public async deleteContact(id: string) {\r\n    await httpService.delete(`contact/${id}`);\r\n    return this._contacts$.subscribe(contacts => {\r\n      contacts = contacts.filter(contact => contact._id !== id)\r\n    })\r\n\r\n  }\r\n\r\n  public async saveContact(contact: Contact) {\r\n    const savedContact = contact._id ?\r\n      await httpService.put(`contact/${contact._id}`, contact) :\r\n      await httpService.post(`contact/`, contact)\r\n    return savedContact\r\n  }\r\n\r\n  private _sort(contacts: Contact[]): Contact[] {\r\n    return contacts.sort((a, b) => {\r\n      if (a.name.toLocaleLowerCase() < b.name.toLocaleLowerCase()) {\r\n        return -1;\r\n      }\r\n      if (a.name.toLocaleLowerCase() > b.name.toLocaleLowerCase()) {\r\n        return 1;\r\n      }\r\n\r\n      return 0;\r\n    })\r\n  }\r\n\r\n}","import {utilService} from '../services/util.service'\r\nexport class Contact {\r\n\r\n    constructor(public name: string = '', public email: string = '', public phone: string = '',public _id?: string) {\r\n\r\n    }\r\n\r\n    public setId?() {\r\n        // Implement your own set Id\r\n        this._id = utilService.makeId()\r\n    }\r\n}","<section class=\"homepage\">\n  <div class=\"user-info-container\">\n    <div *ngIf=\"user.name; else signup\" class=\"user-info\">\n      <h2>Hello {{ user.name }}</h2>\n      <h3>Coins: {{ user.coins }}</h3>\n      <h3>Rate: {{ rate$ | async }}</h3>\n      <button (click)=\"onLogout()\" class=\"btn warning\">Sign out</button>\n    </div>\n    <ng-template #signup>\n      <form (submit)=\"onSignup()\" class=\"user-info signup\">\n        <label for=\"signup\">Name: </label>\n        <input type=\"text\" id=\"signup\" name=\"name\" [(ngModel)]=\"userName\" />\n        <button class=\"btn confirm\">Signup</button>\n      </form>\n    </ng-template>\n    <move-list\n      [moves]=\"lastMoves\"\n      [title]=\"'Last moves:'\"\n      [isShowTo]=\"true\"\n      [moveClass]=\"'last-moves'\"\n    ></move-list>\n  </div>\n</section>\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { Observable, Subscription } from 'rxjs';\nimport { Move } from 'src/models/move.model';\nimport { User } from 'src/models/user.model';\nimport { BitcoinService } from '../../../services/bitcoin.service';\nimport { UserService } from '../../../services/user.service';\n@Component({\n  selector: 'homepage',\n  templateUrl: './homepage.component.html',\n  styleUrls: ['./homepage.component.scss'],\n  changeDetection:ChangeDetectionStrategy.OnPush\n})\nexport class HomepageComponent implements OnInit {\n  rate$: Observable<string>\n  user: User\n  userName: string\n  lastMoves: Move[]\n  constructor(private bitcoinService: BitcoinService, private userService: UserService) { }\n  subscription: Subscription\n\n  onSignup() {\n    if(!this.userName) return;\n    this.userService.signup(this.userName)\n    // this.userService.signup(this.userName).subscribe(user => { this.user = user })\n    this.userName = ''\n    this.lastMoves = (this.user.moves.slice(this.user?.moves.length-3)).reverse()\n  }\n\n  onLogout(){\n    this.userService.logout()\n    // this.userService.logout().subscribe(user => {this.user=user})\n    this.lastMoves = []\n  }\n\n  ngOnInit(): void {\n\n    this.userService.user$.subscribe(user => {\n      this.user = user\n      this.lastMoves = (this.user?.moves.slice(this.user?.moves.length-3)).reverse()\n    })\n    if (this.user.name) this.rate$ = this.bitcoinService.getRate(this.user.coins)\n  }\n\n}\n","import { ChangeDetectionStrategy, Component, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ChartComponent implements OnInit {\n  @Input() title\n  @Input() data\n  @Input() columnNames\n  @Input() vTitle\n\n  options = {\n    colors: ['#8dd6e9'],\n    backgroundColor: 'transparent',\n    hAxis: {\n      title: 'Date'\n    },\n    vAxis: {\n      title: ''\n    },\n    legend: 'left'\n  }\n  type = 'AreaChart'\n  width = screen.width * 0.95\n  height = screen.width * 0.4\n  constructor() { }\n\n  ngOnInit(): void {\n    this.options.vAxis.title = this.vTitle\n  }\n\n}\n","<section>\n  <h2 class=\"chart-headline\">{{ title }}</h2>\n  <google-chart\n    class=\"chart\"\n    [type]=\"type\"\n    [data]=\"data | async\"\n    [width]=\"width\"\n    [height]=\"height\"\n    [options]=\"options\"\n    [columns]=\"columnNames\"\n  >\n  </google-chart>\n</section>\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Subscription, Observable } from 'rxjs';\nimport { Contact } from 'src/models/contact.model';\nimport { ContactService } from 'src/services/contact.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { mergeMap } from 'rxjs/operators';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { Move } from 'src/models/move.model';\nimport { UserService } from 'src/services/user.service';\nimport { User } from 'src/models/user.model';\n\n@Component({\n  selector: 'contact-details',\n  templateUrl: './contact-details.component.html',\n  styleUrls: ['./contact-details.component.scss'],\n  // changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ContactDetailsComponent implements OnInit {\n  @Output() onEdit = new EventEmitter()\n\n  contact: Contact\n  user$: Observable<User>\n  moves: Move[]\n  subscription: Subscription\n  subscriptionMoves: Subscription\n  form: FormGroup\n\n  constructor(private userService: UserService,\n    private contactService: ContactService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private fb: FormBuilder) {\n    // this.router.routeReuseStrategy.shouldReuseRoute = () => false;\n\n    this.form = this.fb.group({\n      amount: ''\n    })\n  }\n\n  onRemoveContact() {\n    this.contactService.deleteContact(this.contact._id)\n    this.onBack()\n  }\n\n  onBack() {\n    this.router.navigateByUrl('/contact')\n  }\n\n  onMoveCoins(amount) {\n    this.userService.addMove(this.contact, amount)\n    // this.setContactMoves(this.contact._id)\n  }\n\n  setContactMoves(contactId) {\n    this.user$ = this.userService.user$\n    this.subscriptionMoves = this.user$.subscribe(user => {\n      this.moves = user.moves.filter(({ toId }) => toId === contactId)\n    })\n  }\n\n  async onChangeContact(diff) {\n    // const contactId = await this.contactService.getNeighborContactId(this.contact._id, diff)\n    // await this.router.navigateByUrl('/contact/' + contactId)\n    // this.setContactMoves(contactId)\n    //This option messes with  going back to the list\n    const subs = this.contactService.getNeighborContactId(this.contact._id, diff).subscribe(async contactId => {\n      console.log('contactId:', contactId)\n      await this.router.navigateByUrl('/contact/' + contactId)\n      this.setContactMoves(contactId)\n      subs.unsubscribe()\n    })\n  }\n\n\n  ngOnInit(): void {\n    this.subscription = this.route.data.subscribe(data => {\n      console.log('data:', data)\n      this.contact = data.contact\n    })\n\n    this.subscriptionMoves = this.route.params.subscribe(params => {\n      this.setContactMoves(params.id)\n    })\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe()\n    this.subscriptionMoves.unsubscribe()\n  }\n}\n","<section class=\"flex justify-center detail\">\n  <button (click)=\"onBack()\" class=\"btn back\"></button>\n  <div class=\"flex column align-center space-between contact-container\">\n    <div class=\"contact-info\">\n      <img\n        [src]=\"'https://i.pravatar.cc/150?u=' + contact._id\"\n        alt=\"{{ contact.name }}'s photo\"\n      />\n\n      <h3>{{ contact.name }}</h3>\n      <h4>{{ contact.phone }}</h4>\n      <h4>{{ contact.email }}</h4>\n    </div>\n    <div class=\"btn-container\">\n      <a [routerLink]=\"['/contact/edit', contact._id]\" class=\"btn confirm\"\n        >Edit</a\n      >\n      <button (click)=\"onRemoveContact()\" type=\"button\" class=\"btn warning\">\n        Delete\n      </button>\n    </div>\n  </div>\n  <div class=\"move-container\">\n    <fund (moveCoins)=\"onMoveCoins($event)\"></fund>\n    <move-list\n      [moves]=\"moves\"\n      [title]=\"'Moves'\"\n      [isShowTo]=\"false\"\n      [moveClass]=\"'move-list'\"\n    ></move-list>\n  </div>\n  <div class=\"paging\">\n    <button (click)=\"onChangeContact(-1)\">Prev</button>\n    <button (click)=\"onChangeContact(1)\">Next</button>\n  </div>\n</section>\n","import { Component, OnInit, ChangeDetectionStrategy } from '@angular/core';\nimport { BitcoinService } from '../../../services/bitcoin.service';\n@Component({\n  selector: 'statistics',\n  templateUrl: './statistics.component.html',\n  styleUrls: ['./statistics.component.scss'],\n  changeDetection:ChangeDetectionStrategy.OnPush\n})\nexport class StatisticsComponent implements OnInit {\n  // marketPrice:MarketPriceValue['value']\n  marketPrice\n  confirmedTransactions\n  constructor(private bitcoinService: BitcoinService) { }\n\n\n  ngOnInit(): void {\n    this.marketPrice = this.bitcoinService.getMarketPrice()\n    this.confirmedTransactions = this.bitcoinService.getConfirmedTransactions()\n\n  }\n\n}\n","<section>\n    <chart [data]=\"marketPrice\" [title]=\"'Market price'\" [vTitle]=\"'Price'\"></chart>\n    <chart [data]=\"confirmedTransactions\" [title]=\"'Confirmed transactions'\" [vTitle]=\"'Transactions'\"></chart>\n</section>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { Contact } from 'src/models/contact.model';\nimport { ContactResolverService } from 'src/services/contact-resolver.service';\nimport { AuthGuard } from './guards/auth.guard';\nimport { ContactDetailsComponent } from './pages/Contact-details/Contact-details.component';\nimport { ContactEditComponent } from './pages/Contact-edit/Contact-edit.component';\nimport { ContactComponent } from './pages/Contact/Contact.component';\nimport { HomepageComponent } from './pages/homepage/homepage.component';\nimport { StatisticsComponent } from './pages/statistics/statistics.component';\n\nconst routes: Routes = [\n  { path: 'contact/edit/:id', component: ContactEditComponent, canActivate:[AuthGuard] , resolve:{contact:ContactResolverService} },\n  { path: 'contact/edit', component: ContactEditComponent, canActivate:[AuthGuard] , resolve:{contact:ContactResolverService} },\n  { path: 'contact/:id', component: ContactDetailsComponent, canActivate:[AuthGuard], resolve:{contact:ContactResolverService} },\n  { path: 'contact', component: ContactComponent, canActivate:[AuthGuard] },\n  { path: 'statistic', component: StatisticsComponent, canActivate:[AuthGuard] },\n  { path: '', component: HomepageComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes, { useHash: true })],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}